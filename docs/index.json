[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/alarm-array.js",
    "content": "/**\n * AlarmArray class\n */\nclass AlarmArray {\n  /**\n   * Creates a new instance\n   * @param {number} maximumSize the maximum size of the array - relates to the Alarm monitoring time\n   */\n  constructor (maximumSize) {\n    /**\n     * The array where the requests will be stored\n     * @type {number[]}\n     */\n    this.queue = []\n\n    /**\n     * The total number of requests stored since the last update\n     * @type {number}\n     */\n    this.requests = 0\n\n    /**\n     * The maximum size of the array\n     * @type {number}\n     */\n    this.maximumSize = maximumSize\n\n    /**\n     * The total requests on the alarm monitoring period\n     * @type {number}\n     */\n    this.requestsOnPeriod = 0\n  }\n\n  /**\n   * Add a request\n   */\n  addRequest () {\n    this.requests += 1\n  }\n\n  /**\n   * Update the queue by pushing a new value and shifting the value in the end of the array if it is bigger than the `maximumSize`\n   */\n  updateQueue () {\n    this.queue.push(this.requests)\n    this.requestsOnPeriod += this.requests\n    if (this.queue.length > this.maximumSize) {\n      this.requestsOnPeriod -= this.queue.shift()\n    }\n    this.requests = 0\n  }\n}\n\nmodule.exports = AlarmArray\n",
    "static": true,
    "longname": "C:/Users/russo/development/datadog-eduardo_russo/logmoon/src/alarm-array.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "AlarmArray",
    "memberof": "src/alarm-array.js",
    "static": true,
    "longname": "src/alarm-array.js~AlarmArray",
    "access": "public",
    "export": true,
    "importPath": "logmoon/src/alarm-array.js",
    "importStyle": "AlarmArray",
    "description": "AlarmArray class",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/alarm-array.js~AlarmArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alarm-array.js~AlarmArray#constructor",
    "access": "public",
    "description": "Creates a new instance",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maximumSize",
        "description": "the maximum size of the array - relates to the Alarm monitoring time"
      }
    ]
  },
  {
    "__docId__": 51,
    "kind": "member",
    "name": "queue",
    "memberof": "src/alarm-array.js~AlarmArray",
    "static": false,
    "longname": "src/alarm-array.js~AlarmArray#queue",
    "access": "public",
    "description": "The array where the requests will be stored",
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "number[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 52,
    "kind": "member",
    "name": "requests",
    "memberof": "src/alarm-array.js~AlarmArray",
    "static": false,
    "longname": "src/alarm-array.js~AlarmArray#requests",
    "access": "public",
    "description": "The total number of requests stored since the last update",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "maximumSize",
    "memberof": "src/alarm-array.js~AlarmArray",
    "static": false,
    "longname": "src/alarm-array.js~AlarmArray#maximumSize",
    "access": "public",
    "description": "The maximum size of the array",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "requestsOnPeriod",
    "memberof": "src/alarm-array.js~AlarmArray",
    "static": false,
    "longname": "src/alarm-array.js~AlarmArray#requestsOnPeriod",
    "access": "public",
    "description": "The total requests on the alarm monitoring period",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "addRequest",
    "memberof": "src/alarm-array.js~AlarmArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alarm-array.js~AlarmArray#addRequest",
    "access": "public",
    "description": "Add a request",
    "lineNumber": 38,
    "params": [],
    "return": null
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "updateQueue",
    "memberof": "src/alarm-array.js~AlarmArray",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alarm-array.js~AlarmArray#updateQueue",
    "access": "public",
    "description": "Update the queue by pushing a new value and shifting the value in the end of the array if it is bigger than the `maximumSize`",
    "lineNumber": 45,
    "params": [],
    "return": null
  },
  {
    "__docId__": 61,
    "kind": "file",
    "name": "src/alarm.js",
    "content": "const Config = require('./config')\nconst AlarmArray = require('./alarm-array')\nconst Output = require('./output')\n\nconst config = new Config()\nconst output = new Output()\n/**\n * Alarm class, control the number of requests per second\n */\nclass Alarm {\n  /**\n   * Constructor function\n   */\n  constructor () {\n    /**\n     * The queue to check the threshould\n     * @type {AlarmArray}\n     */\n    this.requestsQueue = new AlarmArray(config.alarmPeriod)\n\n    /**\n     * Variable to check if the alert has already been displayed\n     * @type {boolean}\n     */\n    this.alertDisplayed = false\n  }\n\n  /**\n   * Add a new request to the total requests amount\n   */\n  addRequest () {\n    this.requestsQueue.addRequest()\n  }\n\n  /**\n   * Start the log monitoring alarm. The function calls itself every `config.alarmCheckInterval` miliseconds\n   * @param {boolean} [runOnce=false] Used for test purpose, only\n   */\n  monitor (runOnce = false) {\n    this.requestsQueue.updateQueue()\n    const now = new Date()\n    if (!this.alertDisplayed && this.requestsQueue.requestsOnPeriod / config.alarmPeriod > config.requestsPreSecondAlarm) {\n      const message = `****** ALERT! High traffic generated an alert hits = ${this.requestsQueue.requestsOnPeriod}, triggered at ${now} ******`\n      output.alarm(message, true)\n      this.alertDisplayed = true\n    } else if (this.alertDisplayed && this.requestsQueue.requestsOnPeriod / config.alarmPeriod <= config.requestsPreSecondAlarm) {\n      const message = `****** ALERT RECOVERED! Trafic normalized at ${now} ******`\n      output.alarm(message, false)\n      this.alertDisplayed = false\n    }\n\n    setTimeout(() => {\n      if (!runOnce) {\n        this.monitor()\n      }\n    }, config.alarmCheckInterval)\n  }\n}\n\nmodule.exports = Alarm\n",
    "static": true,
    "longname": "C:/Users/russo/development/datadog-eduardo_russo/logmoon/src/alarm.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 62,
    "kind": "variable",
    "name": "config",
    "memberof": "src/alarm.js",
    "static": true,
    "longname": "src/alarm.js~config",
    "access": "public",
    "export": false,
    "importPath": "logmoon/src/alarm.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "src/config.js~Config"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 63,
    "kind": "variable",
    "name": "output",
    "memberof": "src/alarm.js",
    "static": true,
    "longname": "src/alarm.js~output",
    "access": "public",
    "export": false,
    "importPath": "logmoon/src/alarm.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "src/output.js~Output"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 64,
    "kind": "class",
    "name": "Alarm",
    "memberof": "src/alarm.js",
    "static": true,
    "longname": "src/alarm.js~Alarm",
    "access": "public",
    "export": true,
    "importPath": "logmoon/src/alarm.js",
    "importStyle": "Alarm",
    "description": "Alarm class, control the number of requests per second",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 65,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/alarm.js~Alarm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alarm.js~Alarm#constructor",
    "access": "public",
    "description": "Constructor function",
    "lineNumber": 14
  },
  {
    "__docId__": 66,
    "kind": "member",
    "name": "requestsQueue",
    "memberof": "src/alarm.js~Alarm",
    "static": false,
    "longname": "src/alarm.js~Alarm#requestsQueue",
    "access": "public",
    "description": "The queue to check the threshould",
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "AlarmArray"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 67,
    "kind": "member",
    "name": "alertDisplayed",
    "memberof": "src/alarm.js~Alarm",
    "static": false,
    "longname": "src/alarm.js~Alarm#alertDisplayed",
    "access": "public",
    "description": "Variable to check if the alert has already been displayed",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "addRequest",
    "memberof": "src/alarm.js~Alarm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alarm.js~Alarm#addRequest",
    "access": "public",
    "description": "Add a new request to the total requests amount",
    "lineNumber": 31,
    "params": [],
    "return": null
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "monitor",
    "memberof": "src/alarm.js~Alarm",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alarm.js~Alarm#monitor",
    "access": "public",
    "description": "Start the log monitoring alarm. The function calls itself every `config.alarmCheckInterval` miliseconds",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "runOnce",
        "description": "Used for test purpose, only"
      }
    ],
    "return": null
  },
  {
    "__docId__": 72,
    "kind": "file",
    "name": "src/config.js",
    "content": "const env = require('dotenv').config()\nlet instance = null\n\n/**\n * Singleton configuration class\n */\nclass Config {\n  /**\n   * Singleton configurator constructor\n   * Read all environment variables to configure the application\n   * @param {boolean} [reset=false] Reset the instance singleton and set the configuration again. Used for unit test purpose, only.\n   */\n  constructor (reset = false) {\n    // Singleton reset\n    if (reset === true) {\n      instance = null\n    }\n\n    if (instance !== null) {\n      return instance\n    }\n    /**\n     * The interval to display information in miliseconds\n     * @type {number}\n     * @default 10,000\n     */\n    this.statsDisplayInterval = typeof process.env.LOGMOON_STATS_DISPLAY_INTERVAL === 'undefined' ||\n      isNaN(Number(process.env.LOGMOON_STATS_DISPLAY_INTERVAL))\n      ? 10 * 1000\n      : Number(process.env.LOGMOON_STATS_DISPLAY_INTERVAL) * 1000\n\n    /**\n     * The interval to check the alarm in miliseconds\n     * @type {number}\n     * @default 1,000\n     */\n    this.alarmCheckInterval = 1 * 1000\n\n    /**\n     * The alarm interval in seconds\n     * @type {number}\n     * @default 120\n     */\n    this.alarmPeriod = typeof process.env.LOGMOON_ALARM_PERIOD === 'undefined' ||\n      isNaN(Number(process.env.LOGMOON_ALARM_PERIOD))\n      ? 120\n      : Number(process.env.LOGMOON_ALARM_PERIOD)\n\n    /**\n     * The amount of requests per second that should fire the alert\n     * @type {number}\n     * @default 10\n     */\n    this.requestsPreSecondAlarm = typeof process.env.LOGMOON_REQUESTS_PER_SECOND_ALARM === 'undefined' ||\n      isNaN(Number(process.env.LOGMOON_REQUESTS_PER_SECOND_ALARM))\n      ? 10\n      : Number(process.env.LOGMOON_REQUESTS_PER_SECOND_ALARM)\n\n    /**\n     * The location of the log file to be streamed\n     * @type {string}\n     * @default '/tmp/access.log'\n     */\n    this.logFile = typeof process.env.LOGMOON_LOG_FILE === 'undefined'\n      ? '/tmp/access.log'\n      : process.env.LOGMOON_LOG_FILE\n\n    /**\n     * Location of the output file. If empty, or not present, LogMoon will not log to file\n     * @type {string|boolean}\n     * @default false\n     */\n    this.outputLocation = typeof process.env.LOGMOON_OUTPUT_LOCATION === 'undefined' ||\n      process.env.LOGMOON_OUTPUT_LOCATION === '' ||\n      process.env.LOGMOON_OUTPUT_LOCATION === 'false'\n      ? false\n      : process.env.LOGMOON_OUTPUT_LOCATION\n\n    instance = this\n    return instance\n  }\n}\n\nmodule.exports = Config\n",
    "static": true,
    "longname": "C:/Users/russo/development/datadog-eduardo_russo/logmoon/src/config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "name": "instance",
    "memberof": "src/config.js",
    "static": true,
    "longname": "src/config.js~instance",
    "access": "public",
    "export": false,
    "importPath": "logmoon/src/config.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 74,
    "kind": "class",
    "name": "Config",
    "memberof": "src/config.js",
    "static": true,
    "longname": "src/config.js~Config",
    "access": "public",
    "export": true,
    "importPath": "logmoon/src/config.js",
    "importStyle": "Config",
    "description": "Singleton configuration class",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 75,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/config.js~Config",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/config.js~Config#constructor",
    "access": "public",
    "description": "Singleton configurator constructor\nRead all environment variables to configure the application",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "reset",
        "description": "Reset the instance singleton and set the configuration again. Used for unit test purpose, only."
      }
    ]
  },
  {
    "__docId__": 76,
    "kind": "member",
    "name": "statsDisplayInterval",
    "memberof": "src/config.js~Config",
    "static": false,
    "longname": "src/config.js~Config#statsDisplayInterval",
    "access": "public",
    "description": "The interval to display information in miliseconds",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "10,000"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 77,
    "kind": "member",
    "name": "alarmCheckInterval",
    "memberof": "src/config.js~Config",
    "static": false,
    "longname": "src/config.js~Config#alarmCheckInterval",
    "access": "public",
    "description": "The interval to check the alarm in miliseconds",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "1,000"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 78,
    "kind": "member",
    "name": "alarmPeriod",
    "memberof": "src/config.js~Config",
    "static": false,
    "longname": "src/config.js~Config#alarmPeriod",
    "access": "public",
    "description": "The alarm interval in seconds",
    "lineNumber": 44,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "120"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 79,
    "kind": "member",
    "name": "requestsPreSecondAlarm",
    "memberof": "src/config.js~Config",
    "static": false,
    "longname": "src/config.js~Config#requestsPreSecondAlarm",
    "access": "public",
    "description": "The amount of requests per second that should fire the alert",
    "lineNumber": 54,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "10"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 80,
    "kind": "member",
    "name": "logFile",
    "memberof": "src/config.js~Config",
    "static": false,
    "longname": "src/config.js~Config#logFile",
    "access": "public",
    "description": "The location of the log file to be streamed",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "'/tmp/access.log'"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 81,
    "kind": "member",
    "name": "outputLocation",
    "memberof": "src/config.js~Config",
    "static": false,
    "longname": "src/config.js~Config#outputLocation",
    "access": "public",
    "description": "Location of the output file. If empty, or not present, LogMoon will not log to file",
    "lineNumber": 73,
    "unknown": [
      {
        "tagName": "@default",
        "tagValue": "false"
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "string",
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 82,
    "kind": "file",
    "name": "src/index.js",
    "content": "#!/usr/bin/env node\n\nconst Monitor = require('./monitor.js')\nMonitor.run()\n",
    "static": true,
    "longname": "C:/Users/russo/development/datadog-eduardo_russo/logmoon/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 83,
    "kind": "file",
    "name": "src/monitor.js",
    "content": "const Tail = require('./tail')\nconst Output = require('./output')\nconst Stats = require('./stats')\nconst Alarm = require('./alarm')\n\nconst stats = new Stats()\nconst alarm = new Alarm()\nconst output = new Output()\n\n/**\n * Main monitoring class\n */\nclass Monitor {\n  /**\n   * Execute the log tail and monitor stats and requests alarm\n   */\n  static run () {\n    // Only start the monitor if the tail can start\n    let monitor = true\n\n    Tail.start(\n      data => {\n        stats.push(data)\n        alarm.addRequest()\n      },\n      error => {\n        monitor = false\n        output.error(error)\n      }\n    )\n    if (monitor) {\n      output.start()\n      stats.monitor()\n      alarm.monitor()\n    }\n  }\n}\n\nmodule.exports = Monitor\n",
    "static": true,
    "longname": "C:/Users/russo/development/datadog-eduardo_russo/logmoon/src/monitor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 84,
    "kind": "variable",
    "name": "stats",
    "memberof": "src/monitor.js",
    "static": true,
    "longname": "src/monitor.js~stats",
    "access": "public",
    "export": false,
    "importPath": "logmoon/src/monitor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "src/stats.js~Stats"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 85,
    "kind": "variable",
    "name": "alarm",
    "memberof": "src/monitor.js",
    "static": true,
    "longname": "src/monitor.js~alarm",
    "access": "public",
    "export": false,
    "importPath": "logmoon/src/monitor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "src/alarm.js~Alarm"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "output",
    "memberof": "src/monitor.js",
    "static": true,
    "longname": "src/monitor.js~output",
    "access": "public",
    "export": false,
    "importPath": "logmoon/src/monitor.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "src/output.js~Output"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 87,
    "kind": "class",
    "name": "Monitor",
    "memberof": "src/monitor.js",
    "static": true,
    "longname": "src/monitor.js~Monitor",
    "access": "public",
    "export": true,
    "importPath": "logmoon/src/monitor.js",
    "importStyle": "Monitor",
    "description": "Main monitoring class",
    "lineNumber": 13,
    "interface": false
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "run",
    "memberof": "src/monitor.js~Monitor",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/monitor.js~Monitor.run",
    "access": "public",
    "description": "Execute the log tail and monitor stats and requests alarm",
    "lineNumber": 17,
    "params": [],
    "return": null
  },
  {
    "__docId__": 89,
    "kind": "file",
    "name": "src/output.js",
    "content": "const chalk = require('chalk')\nconst fs = require('fs')\nconst Config = require('./config')\nconst notifier = require('node-notifier')\nconst path = require('path');\nconst config = new Config()\n\n/**\n * Output class\n * Output data to the terminal and to the optional result file\n */\nclass Output {\n  constructor () {\n    /**\n     * The output openSync with the output file location data OR false if outputLocation is not set or set as 'false'\n     * @type {number|boolean}\n     */\n    this.outputFs = config.outputLocation === false ? false : fs.openSync(config.outputLocation, 'a')\n\n    /**\n     * The array to store the text to be logged or saved to file\n     * @type {string[]}\n     */\n    this.messages = []\n  }\n\n  /**\n   * Initial output message\n   */\n  start () {\n    const startMessage = `LogMoon HTTP Log Monitoring started: ${new Date()}`\n    const spacingBefore = Math.floor((process.stdout.columns - startMessage.length) / 2) - 1\n    const spacingAfter = process.stdout.columns - (startMessage.length + spacingBefore + 2)\n\n    this.messages = [\n      `+${'-'.repeat(process.stdout.columns - 2)}+`,\n      `|${' '.repeat(spacingBefore)}${startMessage}${' '.repeat(spacingAfter)}|`,\n      `+${'-'.repeat(process.stdout.columns - 2)}+`,\n      ''\n    ]\n    notifier.notify(\n      {\n        title: 'LogMoon',\n        message: startMessage,\n        icon: path.join(__dirname, 'LogMoon.png'), // Absolute path (doesn't work on balloons)\n        sound: false, // Only Notification Center or Windows Toasters\n        wait: false // Wait with callback, until user action is taken against notification, does not apply to Windows Toasters as they always wait or notify-send as it does not support the wait option\n      })\n    this.messages.forEach(message => {\n      console.log(chalk.bgBlue.white.bold(message))\n      if (this.outputFs !== false) {\n        fs.writeSync(this.outputFs, `${message}\\n`)\n      }\n    })\n  }\n\n  /**\n   * Initial output message\n   */\n  error (errorMessage) {\n    const spacingBefore = Math.floor((process.stdout.columns - errorMessage.length) / 2) - 1\n    const spacingAfter = process.stdout.columns - (errorMessage.length + spacingBefore + 2)\n\n    this.messages = [\n      `+${'-'.repeat(process.stdout.columns - 2)}+`,\n      `|${' '.repeat(spacingBefore)}${errorMessage}${' '.repeat(spacingAfter)}|`,\n      `+${'-'.repeat(process.stdout.columns - 2)}+`,\n      ''\n    ]\n    notifier.notify(\n      {\n        title: 'ERROR!',\n        message: errorMessage,\n        icon: path.join(__dirname, 'LogMoon.png'), // Absolute path (doesn't work on balloons)\n        sound: false, // Only Notification Center or Windows Toasters\n        wait: false // Wait with callback, until user action is taken against notification, does not apply to Windows Toasters as they always wait or notify-send as it does not support the wait option\n      })\n    this.messages.forEach(message => {\n      console.error(chalk.bgRed.white.bold(message))\n      if (this.outputFs !== false) {\n        fs.writeSync(this.outputFs, `${message}\\n`)\n      }\n    })\n  }\n\n  /**\n   * Display a message in the terminal and, optionally, save it in the output file\n   * @param {date} initialTime The initial time of the stats\n   * @param {date} currentTime The current time, when the message is being displayed\n   * @param {object} topSection The object with the most accessed section, with value and amount\n   * @param {object} topMethod The object with the most accessed HTTP method, with value and amount\n   * @param {object} topStatus The object with the most accessed HTTP response status, with value and amount\n   * @param {number} totalRequests The total amount of requests\n   * @param {number} totalDataTransfer The total data transfered, in bytes\n   */\n  stats (initialTime, currentTime, topSection, topMethod, topStatus, totalRequests, totalDataTransfer) {\n    if (typeof topSection !== 'undefined') {\n      this.messages = [\n        '-'.repeat(process.stdout.columns),\n        `REPORT FROM ${initialTime} until ${currentTime}`,\n        '',\n        `MOST ACCESSED SECTION: \"${topSection.value}\" => ${topSection.amount} times`,\n        `MOST USED HTTP METHOD: \"${topMethod.value}\" => ${topMethod.amount} times`,\n        `MOST RESPONDED STATUS: \"${topStatus.value}\" => ${topStatus.amount} times`,\n        `TOTAL REQUESTS IN THE PERIOD: ${totalRequests} requests`,\n        `TOTAL TRANSFER IN THE PERIOD: ${Output.convertBytes(totalDataTransfer)}`,\n        '-'.repeat(process.stdout.columns)\n      ]\n    } else {\n      this.messages = [\n        '-'.repeat(process.stdout.columns),\n        `no traffic  FROM ${initialTime} until ${currentTime}`,\n        '-'.repeat(process.stdout.columns)\n      ]\n    }\n    this.messages.forEach(message => {\n      console.log(message)\n      if (this.outputFs !== false) {\n        fs.writeSync(this.outputFs, `${message}\\n`)\n      }\n    })\n  }\n\n  /**\n   * Display an alert message in the terminal and, optionally, save it in the output file\n   * @param {string} text The text to be displayed\n   * @param {boolean} alertOn If true, it's the alert being turned on, if false, the alert is being turned off\n   */\n  alarm (text, alertOn = false) {\n    const bgColour = alertOn ? 'bgRed' : 'bgGreen'\n    const colour = alertOn ? 'white' : 'black'\n    this.messages = [\n      '*'.repeat(process.stdout.columns),\n      text + '*'.repeat(process.stdout.columns - text.length),\n      '*'.repeat(process.stdout.columns)\n    ]\n\n    this.messages.forEach(message => {\n      console.log(chalk[bgColour][colour](message))\n      if (this.outputFs !== false) {\n        fs.writeSync(this.outputFs, `${message}\\n`)\n      }\n    })\n    notifier.notify(\n      {\n        title: alertOn ? 'ALERT!' : 'LogMoon',\n        message: text,\n        icon: path.join(__dirname, 'LogMoon.png'), // Absolute path (doesn't work on balloons)\n        sound: alertOn // Only Notification Center or Windows Toasters\n      })\n  }\n\n  /**\n   * Convert bytes into KB, MB, GB or TB, depending on the amount of bytes\n   * @param {number} bytes the bytes to be converted\n   * @returns {string} bytes converted into KB, MB, GB or TB\n   */\n  static convertBytes (bytes) {\n    if (bytes === 0) return '0 Bytes'\n\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB']\n    const i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)))\n\n    return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i]\n  }\n}\n\nmodule.exports = Output\n",
    "static": true,
    "longname": "C:/Users/russo/development/datadog-eduardo_russo/logmoon/src/output.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "config",
    "memberof": "src/output.js",
    "static": true,
    "longname": "src/output.js~config",
    "access": "public",
    "export": false,
    "importPath": "logmoon/src/output.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "src/config.js~Config"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "class",
    "name": "Output",
    "memberof": "src/output.js",
    "static": true,
    "longname": "src/output.js~Output",
    "access": "public",
    "export": true,
    "importPath": "logmoon/src/output.js",
    "importStyle": "Output",
    "description": "Output class\nOutput data to the terminal and to the optional result file",
    "lineNumber": 12,
    "interface": false
  },
  {
    "__docId__": 92,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/output.js~Output",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/output.js~Output#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 93,
    "kind": "member",
    "name": "outputFs",
    "memberof": "src/output.js~Output",
    "static": false,
    "longname": "src/output.js~Output#outputFs",
    "access": "public",
    "description": "The output openSync with the output file location data OR false if outputLocation is not set or set as 'false'",
    "lineNumber": 18,
    "type": {
      "nullable": null,
      "types": [
        "number",
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 94,
    "kind": "member",
    "name": "messages",
    "memberof": "src/output.js~Output",
    "static": false,
    "longname": "src/output.js~Output#messages",
    "access": "public",
    "description": "The array to store the text to be logged or saved to file",
    "lineNumber": 24,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "start",
    "memberof": "src/output.js~Output",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/output.js~Output#start",
    "access": "public",
    "description": "Initial output message",
    "lineNumber": 30,
    "params": [],
    "return": null
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "error",
    "memberof": "src/output.js~Output",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/output.js~Output#error",
    "access": "public",
    "description": "Initial output message",
    "lineNumber": 60,
    "params": [
      {
        "name": "errorMessage",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "stats",
    "memberof": "src/output.js~Output",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/output.js~Output#stats",
    "access": "public",
    "description": "Display a message in the terminal and, optionally, save it in the output file",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "date"
        ],
        "spread": false,
        "optional": false,
        "name": "initialTime",
        "description": "The initial time of the stats"
      },
      {
        "nullable": null,
        "types": [
          "date"
        ],
        "spread": false,
        "optional": false,
        "name": "currentTime",
        "description": "The current time, when the message is being displayed"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "topSection",
        "description": "The object with the most accessed section, with value and amount"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "topMethod",
        "description": "The object with the most accessed HTTP method, with value and amount"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "topStatus",
        "description": "The object with the most accessed HTTP response status, with value and amount"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "totalRequests",
        "description": "The total amount of requests"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "totalDataTransfer",
        "description": "The total data transfered, in bytes"
      }
    ],
    "return": null
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "alarm",
    "memberof": "src/output.js~Output",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/output.js~Output#alarm",
    "access": "public",
    "description": "Display an alert message in the terminal and, optionally, save it in the output file",
    "lineNumber": 129,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "text",
        "description": "The text to be displayed"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "alertOn",
        "description": "If true, it's the alert being turned on, if false, the alert is being turned off"
      }
    ],
    "return": null
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "convertBytes",
    "memberof": "src/output.js~Output",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/output.js~Output.convertBytes",
    "access": "public",
    "description": "Convert bytes into KB, MB, GB or TB, depending on the amount of bytes",
    "lineNumber": 158,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string} bytes converted into KB, MB, GB or TB"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bytes",
        "description": "the bytes to be converted"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "bytes converted into KB, MB, GB or TB"
    }
  },
  {
    "__docId__": 105,
    "kind": "file",
    "name": "src/stats-map.js",
    "content": "/**\n * Stats Map class\n * @extends {Map}\n */\nclass StatsMap extends Map {\n  /**\n   * Add 1 to the item mapped on index. If the index doesn't exist, create the item and set it's count as 1\n   * @param {string} index The index of the data to be added\n   */\n  addOne (index) {\n    const data = this.get(index)\n    this.set(index, typeof data !== 'undefined' ? data + 1 : 1)\n  }\n\n  /**\n   * Retrive the item that has more occurences and the amount of occurrences\n   * @returns {Object} Object with value and amount\n   */\n  top () {\n    let topMethod = [null, 0]\n\n    if (this.size > 0) {\n      // Use the array reduce method to retrieve the bigger value. Iterates each item and always stay with the bigger item\n      topMethod = [...this.entries()].reduce((previous, current) => current[1] > previous[1] ? current : previous)\n    }\n    return {\n      value: topMethod[0],\n      amount: topMethod[1]\n    }\n  }\n}\n\nmodule.exports = StatsMap\n",
    "static": true,
    "longname": "C:/Users/russo/development/datadog-eduardo_russo/logmoon/src/stats-map.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 106,
    "kind": "class",
    "name": "StatsMap",
    "memberof": "src/stats-map.js",
    "static": true,
    "longname": "src/stats-map.js~StatsMap",
    "access": "public",
    "export": true,
    "importPath": "logmoon/src/stats-map.js",
    "importStyle": "StatsMap",
    "description": "Stats Map class",
    "lineNumber": 5,
    "interface": false,
    "extends": [
      "Map"
    ]
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "addOne",
    "memberof": "src/stats-map.js~StatsMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stats-map.js~StatsMap#addOne",
    "access": "public",
    "description": "Add 1 to the item mapped on index. If the index doesn't exist, create the item and set it's count as 1",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "index",
        "description": "The index of the data to be added"
      }
    ],
    "return": null
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "top",
    "memberof": "src/stats-map.js~StatsMap",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stats-map.js~StatsMap#top",
    "access": "public",
    "description": "Retrive the item that has more occurences and the amount of occurrences",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object} Object with value and amount"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Object with value and amount"
    },
    "params": []
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "src/stats.js",
    "content": "const Config = require('./config')\nconst StatsMap = require('./stats-map')\nconst Output = require('./output')\n\nconst config = new Config()\nconst output = new Output()\n\n/**\n * Stats class, control and display stats data\n */\nclass Stats {\n  /**\n   * Constructor function\n   */\n  constructor () {\n    /**\n     * The StatsMap of the log methods\n     * @type StatsMap\n     */\n    this.methods = new StatsMap()\n\n    /**\n     * The StatsMap of the log sections\n     * @type StatsMap\n     */\n    this.sections = new StatsMap()\n\n    /**\n     * The StatsMap of the log statuses\n     * @type StatsMap\n     */\n    this.statuses = new StatsMap()\n\n    /**\n     * The total transfered bytes\n     * @type number\n     */\n    this.totalDataTransfer = 0\n\n    /**\n     * The total number of requests\n     * @type number\n     */\n    this.totalRequests = 0\n  }\n\n  /**\n   * Add a new line of data to the logs array\n   * @param {string} data The line of data read from the log\n   * Example of data: 127.0.0.1 - - [23/Feb/2020:10:16:44 +0000] \"GET /user/charles HTTP/1.1\" 200 246\n   */\n  push (data) {\n    const entryRegEx = /[0-9.]+ [A-Za-z-]+ [A-Za-z-]+ \\[.+\\] \"(.+) \\/([^/]*)\\/?[^ ]* [^ ]* ([0-9]+) ([0-9]+)/\n    //                                                        ^      ^                     ^        ^\n    // Capture Groups                                         1      2                     3        4\n    //                                                        method section               status   dataTransfer\n    const match = data.match(entryRegEx)\n\n    this.methods.addOne(match[1])\n    this.sections.addOne(match[2])\n    this.statuses.addOne(match[3])\n    this.totalDataTransfer += Number(match[4])\n    this.totalRequests += 1\n  }\n\n  /**\n   * Clean the maps and zero the total data transfer and total requests\n   */\n  clean () {\n    this.methods.clear()\n    this.sections.clear()\n    this.statuses.clear()\n    this.totalDataTransfer = 0\n    this.totalRequests = 0\n  }\n\n  /**\n   * Start the log monitoring\n   * @param {date} [previous=false] The previous time the function was executed\n   */\n  monitor (previous = false) {\n    if (!this.run) {\n      return\n    }\n    const now = new Date()\n    // Just execute the function if a previous period of data was captured\n    if (previous) {\n      const topMethod = this.methods.top()\n      const topSection = this.sections.top()\n      const topStatus = this.statuses.top()\n\n      if (topSection.amount && topSection.amount > 0) {\n        output.stats(previous, now, topSection, topMethod, topStatus, this.totalRequests, this.totalDataTransfer)\n      } else {\n        output.stats(previous, now)\n      }\n\n      // Zero the data for the next run\n      this.clean()\n    }\n\n    // Pause for the statsDisplayInterval amount\n    setTimeout(() => {\n      this.monitor(now)\n    }, config.statsDisplayInterval)\n  }\n\n  /**\n   * Stop the monitoring\n   */\n  stop () {\n    this.run = false\n  }\n}\n\nmodule.exports = Stats\n",
    "static": true,
    "longname": "C:/Users/russo/development/datadog-eduardo_russo/logmoon/src/stats.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "variable",
    "name": "config",
    "memberof": "src/stats.js",
    "static": true,
    "longname": "src/stats.js~config",
    "access": "public",
    "export": false,
    "importPath": "logmoon/src/stats.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "src/config.js~Config"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 111,
    "kind": "variable",
    "name": "output",
    "memberof": "src/stats.js",
    "static": true,
    "longname": "src/stats.js~output",
    "access": "public",
    "export": false,
    "importPath": "logmoon/src/stats.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "src/output.js~Output"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 112,
    "kind": "class",
    "name": "Stats",
    "memberof": "src/stats.js",
    "static": true,
    "longname": "src/stats.js~Stats",
    "access": "public",
    "export": true,
    "importPath": "logmoon/src/stats.js",
    "importStyle": "Stats",
    "description": "Stats class, control and display stats data",
    "lineNumber": 11,
    "interface": false
  },
  {
    "__docId__": 113,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/stats.js~Stats",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stats.js~Stats#constructor",
    "access": "public",
    "description": "Constructor function",
    "lineNumber": 15
  },
  {
    "__docId__": 114,
    "kind": "member",
    "name": "methods",
    "memberof": "src/stats.js~Stats",
    "static": false,
    "longname": "src/stats.js~Stats#methods",
    "access": "public",
    "description": "The StatsMap of the log methods",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 115,
    "kind": "member",
    "name": "sections",
    "memberof": "src/stats.js~Stats",
    "static": false,
    "longname": "src/stats.js~Stats#sections",
    "access": "public",
    "description": "The StatsMap of the log sections",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 116,
    "kind": "member",
    "name": "statuses",
    "memberof": "src/stats.js~Stats",
    "static": false,
    "longname": "src/stats.js~Stats#statuses",
    "access": "public",
    "description": "The StatsMap of the log statuses",
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 117,
    "kind": "member",
    "name": "totalDataTransfer",
    "memberof": "src/stats.js~Stats",
    "static": false,
    "longname": "src/stats.js~Stats#totalDataTransfer",
    "access": "public",
    "description": "The total transfered bytes",
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 118,
    "kind": "member",
    "name": "totalRequests",
    "memberof": "src/stats.js~Stats",
    "static": false,
    "longname": "src/stats.js~Stats#totalRequests",
    "access": "public",
    "description": "The total number of requests",
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "push",
    "memberof": "src/stats.js~Stats",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stats.js~Stats#push",
    "access": "public",
    "description": "Add a new line of data to the logs array",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "The line of data read from the log\nExample of data: 127.0.0.1 - - [23/Feb/2020:10:16:44 +0000] \"GET /user/charles HTTP/1.1\" 200 246"
      }
    ],
    "return": null
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "clean",
    "memberof": "src/stats.js~Stats",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stats.js~Stats#clean",
    "access": "public",
    "description": "Clean the maps and zero the total data transfer and total requests",
    "lineNumber": 69,
    "params": [],
    "return": null
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "monitor",
    "memberof": "src/stats.js~Stats",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stats.js~Stats#monitor",
    "access": "public",
    "description": "Start the log monitoring",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "date"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "previous",
        "description": "The previous time the function was executed"
      }
    ],
    "return": null
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "stop",
    "memberof": "src/stats.js~Stats",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stats.js~Stats#stop",
    "access": "public",
    "description": "Stop the monitoring",
    "lineNumber": 111,
    "params": [],
    "return": null
  },
  {
    "__docId__": 127,
    "kind": "member",
    "name": "run",
    "memberof": "src/stats.js~Stats",
    "static": false,
    "longname": "src/stats.js~Stats#run",
    "access": "public",
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "file",
    "name": "src/tail.js",
    "content": "const T = require('tail').Tail\nconst Config = require('./config')\nconst config = new Config()\nconst fs = require('fs')\n\nlet tail\n/**\n * Tail class, reads the log stream\n */\nclass Tail {\n  /**\n   * Starts the log tail\n   * @param {function} success the callback function on data read success\n   * @param {function} error the callback function on error\n   */\n  static start (success, error) {\n    if (!fs.existsSync(config.logFile)) {\n      return error(`The log file \"${config.logFile}\" could not be found`)\n    }\n    tail = new T(config.logFile)\n\n    tail.on('line', (data) => success(data))\n    tail.on('error', (e) => error(e))\n  }\n}\n\nmodule.exports = Tail\n",
    "static": true,
    "longname": "C:/Users/russo/development/datadog-eduardo_russo/logmoon/src/tail.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 129,
    "kind": "variable",
    "name": "config",
    "memberof": "src/tail.js",
    "static": true,
    "longname": "src/tail.js~config",
    "access": "public",
    "export": false,
    "importPath": "logmoon/src/tail.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "src/config.js~Config"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 130,
    "kind": "class",
    "name": "Tail",
    "memberof": "src/tail.js",
    "static": true,
    "longname": "src/tail.js~Tail",
    "access": "public",
    "export": true,
    "importPath": "logmoon/src/tail.js",
    "importStyle": "Tail",
    "description": "Tail class, reads the log stream",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "start",
    "memberof": "src/tail.js~Tail",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/tail.js~Tail.start",
    "access": "public",
    "description": "Starts the log tail",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "success",
        "description": "the callback function on data read success"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": "the callback function on error"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "index",
    "content": "![LogMoon Logo](https://vectr.com/russoedu/eyLOsitfC.svg?width=256&select=eyLOsitfCpage0)\n\n\n[![Dependencies Status](https://david-dm.org/russoedu/logmoon/status.svg)](https://david-dm.org/russoedu/logmoon)\n[![DevDependencies Status](https://david-dm.org/russoedu/logmoon/dev-status.svg)](https://david-dm.org/russoedu/logmoon?type=dev)\n[![Coverage Status](https://coveralls.io/repos/github/russoedu/logmoon/badge.svg?branch=master)](https://coveralls.io/github/russoedu/logmoon?branch=master)\n[![Build Status](https://travis-ci.org/russoedu/logmoon.svg?branch=master)](https://travis-ci.org/russoedu/logmoon)\n\n# LogMoon\nLogMoon is real-time HTTP log monitoring CLI. It will display access stats in a determined frequency and alert you if a chosen access limit is reached in 2 minutes.\n\n## Installation\n\nYou can install LogMoon as a global NPM package by running\n```\nnpm i -g logmoon\n```\n\nOr by cloning this repository and running \n```\nnpm install\n```\n\nLogMoon will be installed and will be available globally in your terminal.\n\n## Configuration\n\nLogMoon has 4 configurations that can be changed via environment variables (instructions: [Windows](https://docs.oracle.com/en/database/oracle/r-enterprise/1.5.1/oread/creating-and-modifying-environment-variables-on-windows.html#GUID-DD6F9982-60D5-48F6-8270-A27EC53807D0) | [Unix](https://www.cyberciti.biz/faq/set-environment-variable-unix/)) or via the creation of a ```.env``` file based on the ```.env.example```:\n\n### 1. ```STATS_DISPLAY_INTERVAL``` (seconds)\n\n>The interval to display access information (TODO).\n>\n>*Default value is 10.* (Access information is displayed every 10 seconds);\n\n### 2. ```REQUESTS_PER_SECOND_ALARM``` (requests per second)\n\n>The number of requests per second threshold witch will display an alert when reached.\n>\n>*Default value is 10.* (Alert is displayed if 10 or more requests per second are made in the past ```LOGMOON_ALARM_PERIOD``` seconds).\n\n### 3. ```LOGMOON_ALARM_PERIOD``` (seconds period)\n>The period where the alarm of requests per second will be tested and active.\n>\n>*Default value is 120.* (Alert is displayed if ```REQUESTS_PER_SECOND_ALARM``` or more requests per second are made in the past 2 minutes).\n\n### 3. ```LOG_FILE``` (file location)\n\n>The location of the [W3C-formatted HTTP access log](https://www.w3.org/Daemon/User/Config/Logging.html).\n>\n>*Default value is /tmp/access.log.* (The location from where the log file will be consumed in real-time).\n\n### 4. ```LOGMOON_OUTPUT_LOCATION``` (file location)\n\n>The location of the output file. If empty, or not present, LogMoon will not log to file, only to the terminal window\n\n## Usage\n\nIn order to use LogMoon, you can execute the following on the terminal:\n\n```\nlogmoon\n```\n\nOr, if you cloned the repo, run\n\n```\nnpm start\n```\n\nLogMoon should start running and displaying the information from your server log file.\n\n## Development\n\nTo install locally and be able to contribute, clone this repo and save a copy of ```.env.example``` as ```.env```.\n\nTo execute the application:\n```\nnpm start\n```\n\nTo run the tests:\n```\nnpm test\n```\n\nTo generate the documentation:\n```\nnpm run doc\n```\n\n## Future improvements\n\n- [ ] Find a less memory consuming solution for the alarm (maybe based on the average requests instead of an array)\n- [ ] Make the ```REQUESTS_PER_SECOND_ALARM``` variable according to the log frequency\n- [ ] Display an alert in a permanent position in the screen\n- [ ] Create other alerts, for instance for any status 50x or a certain amount of status 40x in a period of time\n- [ ] Handle several logs\n- [ ] Create a browser output\n- [ ] Create an Electron app\n- [ ] Sending push notifications ([PushMe](https://pushme.jagcesar.se/) solution, for instance)\n",
    "longname": "C:\\Users\\russo\\development\\datadog-eduardo_russo\\logmoon\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"logmoon\",\n  \"version\": \"1.7.0\",\n  \"homepage\": \"https://github.com/russoedu/logmoon#readme\",\n  \"license\": \"MIT\",\n  \"description\": \"HTTP log monitoring console program\",\n  \"author\": {\n    \"name\": \"Eduardo Russo\",\n    \"email\": \"russoedu@gmail.com\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/russoedu/logmoon/issues\"\n  },\n  \"main\": \"src/index.js\",\n  \"bin\": {\n    \"logmoon\": \"./src/index.js\"\n  },\n  \"scripts\": {\n    \"start\": \"node ./src/index.js\",\n    \"test\": \"nyc --reporter=html --reporter=text mocha\",\n    \"coverage\": \"nyc report --reporter=text-lcov | coveralls\",\n    \"doc\": \"./node_modules/.bin/esdoc\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/russoedu/logmoon.git\"\n  },\n  \"keywords\": [\n    \"log\",\n    \"monitoring\",\n    \"terminal\",\n    \"alert\"\n  ],\n  \"devDependencies\": {\n    \"chai\": \"^4.2.0\",\n    \"coveralls\": \"^3.0.9\",\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-node\": \"^1.0.5\",\n    \"esdoc-node-plugin\": \"^0.2.1\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^6.8.0\",\n    \"eslint-config-standard\": \"^14.1.0\",\n    \"eslint-plugin-chai-friendly\": \"^0.5.0\",\n    \"eslint-plugin-import\": \"^2.20.1\",\n    \"eslint-plugin-node\": \"^11.0.0\",\n    \"eslint-plugin-promise\": \"^4.2.1\",\n    \"eslint-plugin-standard\": \"^4.0.1\",\n    \"mocha\": \"^7.0.1\",\n    \"mocked-env\": \"^1.3.2\",\n    \"nyc\": \"^15.0.0\",\n    \"sinon\": \"^9.0.0\"\n  },\n  \"dependencies\": {\n    \"chalk\": \"^3.0.0\",\n    \"dotenv\": \"^8.2.0\",\n    \"node-notifier\": \"^6.0.0\",\n    \"tail\": \"^2.0.3\"\n  }\n}\n",
    "longname": "C:\\Users\\russo\\development\\datadog-eduardo_russo\\logmoon\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]